{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3d54ec83",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pandas in c:\\programdata\\anaconda3\\lib\\site-packages (1.3.4)\n",
      "Requirement already satisfied: numpy in c:\\programdata\\anaconda3\\lib\\site-packages (1.20.3)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in c:\\users\\master\\appdata\\roaming\\python\\python39\\site-packages (from pandas) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2017.3 in c:\\programdata\\anaconda3\\lib\\site-packages (from pandas) (2021.3)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\master\\appdata\\roaming\\python\\python39\\site-packages (from python-dateutil>=2.7.3->pandas) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "%pip install pandas numpy\n",
    "#!pip install regressormetricgraphplot\n",
    "#%pip install regressioncomparemetricplot\n",
    "#!pip install -q dtreeviz\n",
    "#from CompareModels import *\n",
    "#from regressioncomparemetricplot import CompareModels\n",
    "#from subprocess import check_output\n",
    "#print(check_output([\"ls\", \"../input\"]).decode(\"utf8\"))\n",
    "import os\n",
    "import pandas as pd\n",
    "from pandas import DataFrame,Series\n",
    "from sklearn import tree\n",
    "import matplotlib\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn import svm\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "%matplotlib inline\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f65bcf9d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Master\\AppData\\Roaming\\Python\\Python39\\site-packages\\IPython\\core\\interactiveshell.py:3397: DtypeWarning: Columns (471,473,474,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,569,570,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,624,625,626,627,628,629,630,631,632,633,634,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,745,746,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,770,771,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,794,795,797,798,799,800,801,802,803,804,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  exec(code_obj, self.user_global_ns, self.user_ns)\n"
     ]
    }
   ],
   "source": [
    "dataframe = pd.read_csv('d:/Downloads/TADPOLE_D1_D2.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "769e7024",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   RID        PTID VISCODE  SITE  D1  D2 COLPROT ORIGPROT   EXAMDATE DX_bl  \\\n",
      "0    3  011_S_0003      bl    11   1   0   ADNI1    ADNI1  9/12/2005    AD   \n",
      "1    3  011_S_0003     m06    11   1   0   ADNI1    ADNI1  3/13/2006    AD   \n",
      "2    3  011_S_0003     m12    11   1   0   ADNI1    ADNI1  9/12/2006    AD   \n",
      "3    3  011_S_0003     m24    11   1   0   ADNI1    ADNI1  9/12/2007    AD   \n",
      "4    4  022_S_0004      bl    22   1   0   ADNI1    ADNI1  11/8/2005  LMCI   \n",
      "\n",
      "   ...  PHASE_UPENNBIOMK9_04_19_17  BATCH_UPENNBIOMK9_04_19_17  \\\n",
      "0  ...                       ADNI1                 UPENNBIOMK9   \n",
      "1  ...                                                           \n",
      "2  ...                       ADNI1                 UPENNBIOMK9   \n",
      "3  ...                                                           \n",
      "4  ...                       ADNI1                 UPENNBIOMK9   \n",
      "\n",
      "  KIT_UPENNBIOMK9_04_19_17  STDS_UPENNBIOMK9_04_19_17  \\\n",
      "0            P06-MP02-MP01            P06-MP02-MP01/2   \n",
      "1                                                       \n",
      "2            P06-MP02-MP01            P06-MP02-MP01/2   \n",
      "3                                                       \n",
      "4            P06-MP02-MP01            P06-MP02-MP01/2   \n",
      "\n",
      "  RUNDATE_UPENNBIOMK9_04_19_17 ABETA_UPENNBIOMK9_04_19_17  \\\n",
      "0                   12/14/2016                      741.5   \n",
      "1                                                           \n",
      "2                   12/14/2016                      601.4   \n",
      "3                                                           \n",
      "4                     1/9/2017                       1501   \n",
      "\n",
      "  TAU_UPENNBIOMK9_04_19_17  PTAU_UPENNBIOMK9_04_19_17  \\\n",
      "0                    239.7                      22.83   \n",
      "1                                                       \n",
      "2                    251.7                      24.18   \n",
      "3                                                       \n",
      "4                    153.1                      13.29   \n",
      "\n",
      "   COMMENT_UPENNBIOMK9_04_19_17  update_stamp_UPENNBIOMK9_04_19_17  \n",
      "0                           NaN                            39:54.0  \n",
      "1                                                                   \n",
      "2                           NaN                            39:54.0  \n",
      "3                                                                   \n",
      "4                           NaN                            39:54.0  \n",
      "\n",
      "[5 rows x 1907 columns]\n"
     ]
    }
   ],
   "source": [
    "print(dataframe.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "05090c6a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 12740 entries, 0 to 12739\n",
      "Columns: 1907 entries, RID to update_stamp_UPENNBIOMK9_04_19_17\n",
      "dtypes: float64(72), int64(8), object(1827)\n",
      "memory usage: 185.4+ MB\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "print(dataframe.info())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3c6ccfef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ventricles</th>\n",
       "      <th>Hippocampus</th>\n",
       "      <th>WholeBrain</th>\n",
       "      <th>Fusiform</th>\n",
       "      <th>Entorhinal</th>\n",
       "      <th>MidTemp</th>\n",
       "      <th>RAVLT_immediate</th>\n",
       "      <th>RAVLT_learning</th>\n",
       "      <th>RAVLT_forgetting</th>\n",
       "      <th>RAVLT_perc_forgetting</th>\n",
       "      <th>FDG</th>\n",
       "      <th>AGE</th>\n",
       "      <th>PTEDUCAT</th>\n",
       "      <th>APOE4</th>\n",
       "      <th>PTGENDER</th>\n",
       "      <th>MMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>84599.0</td>\n",
       "      <td>5319.0</td>\n",
       "      <td>1129830.0</td>\n",
       "      <td>15506.0</td>\n",
       "      <td>1791.0</td>\n",
       "      <td>18422.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>100.0000</td>\n",
       "      <td>1.09079</td>\n",
       "      <td>81.3</td>\n",
       "      <td>18</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>88580.0</td>\n",
       "      <td>5446.0</td>\n",
       "      <td>1100060.0</td>\n",
       "      <td>14400.0</td>\n",
       "      <td>2427.0</td>\n",
       "      <td>16972.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>100.0000</td>\n",
       "      <td>1.06360</td>\n",
       "      <td>81.3</td>\n",
       "      <td>18</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>90099.0</td>\n",
       "      <td>5157.0</td>\n",
       "      <td>1095640.0</td>\n",
       "      <td>14617.0</td>\n",
       "      <td>1596.0</td>\n",
       "      <td>17330.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>100.0000</td>\n",
       "      <td>1.10384</td>\n",
       "      <td>81.3</td>\n",
       "      <td>18</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>17.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>97420.0</td>\n",
       "      <td>5139.0</td>\n",
       "      <td>1088560.0</td>\n",
       "      <td>14033.0</td>\n",
       "      <td>1175.0</td>\n",
       "      <td>16398.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>100.0000</td>\n",
       "      <td>1.03871</td>\n",
       "      <td>81.3</td>\n",
       "      <td>18</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>19.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>39605.0</td>\n",
       "      <td>6869.0</td>\n",
       "      <td>1154980.0</td>\n",
       "      <td>19036.0</td>\n",
       "      <td>3983.0</td>\n",
       "      <td>19615.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>36.3636</td>\n",
       "      <td>NaN</td>\n",
       "      <td>67.5</td>\n",
       "      <td>10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Ventricles  Hippocampus  WholeBrain  Fusiform  Entorhinal  MidTemp  \\\n",
       "0     84599.0       5319.0   1129830.0   15506.0      1791.0  18422.0   \n",
       "1     88580.0       5446.0   1100060.0   14400.0      2427.0  16972.0   \n",
       "2     90099.0       5157.0   1095640.0   14617.0      1596.0  17330.0   \n",
       "3     97420.0       5139.0   1088560.0   14033.0      1175.0  16398.0   \n",
       "4     39605.0       6869.0   1154980.0   19036.0      3983.0  19615.0   \n",
       "\n",
       "   RAVLT_immediate  RAVLT_learning  RAVLT_forgetting  RAVLT_perc_forgetting  \\\n",
       "0             22.0             1.0               4.0               100.0000   \n",
       "1             19.0             2.0               6.0               100.0000   \n",
       "2             31.0             2.0               7.0               100.0000   \n",
       "3             23.0             1.0               5.0               100.0000   \n",
       "4             37.0             7.0               4.0                36.3636   \n",
       "\n",
       "       FDG   AGE  PTEDUCAT  APOE4 PTGENDER  MMSE  \n",
       "0  1.09079  81.3        18    1.0     Male  20.0  \n",
       "1  1.06360  81.3        18    1.0     Male  24.0  \n",
       "2  1.10384  81.3        18    1.0     Male  17.0  \n",
       "3  1.03871  81.3        18    1.0     Male  19.0  \n",
       "4      NaN  67.5        10    0.0     Male  27.0  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe_subset = dataframe[['Ventricles', 'Hippocampus', 'WholeBrain','Fusiform', 'Entorhinal', 'MidTemp','RAVLT_immediate','RAVLT_learning','RAVLT_forgetting','RAVLT_perc_forgetting' ,'FDG','AGE','PTEDUCAT','APOE4','PTGENDER','MMSE']]\n",
    "dataframe_subset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "eef59d42",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataframe_subset=dataframe_subset.replace(np.nan,0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2258eb2a",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       Ventricles  Hippocampus  WholeBrain  Fusiform  Entorhinal  MidTemp  \\\n",
      "0         84599.0       5319.0   1129830.0   15506.0      1791.0  18422.0   \n",
      "1         88580.0       5446.0   1100060.0   14400.0      2427.0  16972.0   \n",
      "2         90099.0       5157.0   1095640.0   14617.0      1596.0  17330.0   \n",
      "3         97420.0       5139.0   1088560.0   14033.0      1175.0  16398.0   \n",
      "4         39605.0       6869.0   1154980.0   19036.0      3983.0  19615.0   \n",
      "...           ...          ...         ...       ...         ...      ...   \n",
      "12735         0.0          0.0         0.0       0.0         0.0      0.0   \n",
      "12736         0.0          0.0         0.0       0.0         0.0      0.0   \n",
      "12737         0.0          0.0         0.0       0.0         0.0      0.0   \n",
      "12738         0.0          0.0         0.0       0.0         0.0      0.0   \n",
      "12739         0.0          0.0         0.0       0.0         0.0      0.0   \n",
      "\n",
      "       RAVLT_immediate  RAVLT_learning  RAVLT_forgetting  \\\n",
      "0                 22.0             1.0               4.0   \n",
      "1                 19.0             2.0               6.0   \n",
      "2                 31.0             2.0               7.0   \n",
      "3                 23.0             1.0               5.0   \n",
      "4                 37.0             7.0               4.0   \n",
      "...                ...             ...               ...   \n",
      "12735              0.0             0.0               0.0   \n",
      "12736             38.0             3.0               5.0   \n",
      "12737             29.0             2.0               7.0   \n",
      "12738             38.0             3.0               1.0   \n",
      "12739             32.0             0.0               5.0   \n",
      "\n",
      "       RAVLT_perc_forgetting      FDG   AGE  PTEDUCAT  APOE4  MMSE  \\\n",
      "0                   100.0000  1.09079  81.3        18    1.0  20.0   \n",
      "1                   100.0000  1.06360  81.3        18    1.0  24.0   \n",
      "2                   100.0000  1.10384  81.3        18    1.0  17.0   \n",
      "3                   100.0000  1.03871  81.3        18    1.0  19.0   \n",
      "4                    36.3636  0.00000  67.5        10    0.0  27.0   \n",
      "...                      ...      ...   ...       ...    ...   ...   \n",
      "12735                 0.0000  0.00000  69.5        16    1.0  11.0   \n",
      "12736                50.0000  0.00000  59.0        16    0.0  27.0   \n",
      "12737               100.0000  0.00000  83.3        12    0.0  27.0   \n",
      "12738                11.1111  0.00000  68.0        16    0.0  28.0   \n",
      "12739                83.3333  0.00000  67.8        16    2.0  26.0   \n",
      "\n",
      "       PTGENDER_Female  PTGENDER_Male  \n",
      "0                    0              1  \n",
      "1                    0              1  \n",
      "2                    0              1  \n",
      "3                    0              1  \n",
      "4                    0              1  \n",
      "...                ...            ...  \n",
      "12735                1              0  \n",
      "12736                0              1  \n",
      "12737                1              0  \n",
      "12738                1              0  \n",
      "12739                0              1  \n",
      "\n",
      "[12740 rows x 17 columns]\n"
     ]
    }
   ],
   "source": [
    "dataframe_subset= pd.get_dummies(dataframe_subset, columns = ['PTGENDER'])\n",
    "print(dataframe_subset)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "16ecc84c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ventricles</th>\n",
       "      <th>Hippocampus</th>\n",
       "      <th>WholeBrain</th>\n",
       "      <th>Fusiform</th>\n",
       "      <th>Entorhinal</th>\n",
       "      <th>MidTemp</th>\n",
       "      <th>RAVLT_immediate</th>\n",
       "      <th>RAVLT_learning</th>\n",
       "      <th>RAVLT_forgetting</th>\n",
       "      <th>RAVLT_perc_forgetting</th>\n",
       "      <th>FDG</th>\n",
       "      <th>AGE</th>\n",
       "      <th>PTEDUCAT</th>\n",
       "      <th>APOE4</th>\n",
       "      <th>MMSE</th>\n",
       "      <th>PTGENDER_Female</th>\n",
       "      <th>PTGENDER_Male</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.194140</td>\n",
       "      <td>0.507305</td>\n",
       "      <td>1.033304</td>\n",
       "      <td>0.772405</td>\n",
       "      <td>0.023230</td>\n",
       "      <td>0.879963</td>\n",
       "      <td>-0.097167</td>\n",
       "      <td>-0.598629</td>\n",
       "      <td>0.374338</td>\n",
       "      <td>1.400404</td>\n",
       "      <td>1.436013</td>\n",
       "      <td>1.073441</td>\n",
       "      <td>0.710892</td>\n",
       "      <td>0.706383</td>\n",
       "      <td>0.107681</td>\n",
       "      <td>-0.874941</td>\n",
       "      <td>0.874941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.339773</td>\n",
       "      <td>0.544074</td>\n",
       "      <td>0.974064</td>\n",
       "      <td>0.646788</td>\n",
       "      <td>0.373329</td>\n",
       "      <td>0.732851</td>\n",
       "      <td>-0.250803</td>\n",
       "      <td>-0.264146</td>\n",
       "      <td>1.071214</td>\n",
       "      <td>1.400404</td>\n",
       "      <td>1.385501</td>\n",
       "      <td>1.073441</td>\n",
       "      <td>0.710892</td>\n",
       "      <td>0.706383</td>\n",
       "      <td>0.424763</td>\n",
       "      <td>-0.874941</td>\n",
       "      <td>0.874941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.395342</td>\n",
       "      <td>0.460403</td>\n",
       "      <td>0.965268</td>\n",
       "      <td>0.671435</td>\n",
       "      <td>-0.084112</td>\n",
       "      <td>0.769173</td>\n",
       "      <td>0.363744</td>\n",
       "      <td>-0.264146</td>\n",
       "      <td>1.419652</td>\n",
       "      <td>1.400404</td>\n",
       "      <td>1.460256</td>\n",
       "      <td>1.073441</td>\n",
       "      <td>0.710892</td>\n",
       "      <td>0.706383</td>\n",
       "      <td>-0.130131</td>\n",
       "      <td>-0.874941</td>\n",
       "      <td>0.874941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2.663160</td>\n",
       "      <td>0.455191</td>\n",
       "      <td>0.951179</td>\n",
       "      <td>0.605106</td>\n",
       "      <td>-0.315860</td>\n",
       "      <td>0.674616</td>\n",
       "      <td>-0.045954</td>\n",
       "      <td>-0.598629</td>\n",
       "      <td>0.722776</td>\n",
       "      <td>1.400404</td>\n",
       "      <td>1.339263</td>\n",
       "      <td>1.073441</td>\n",
       "      <td>0.710892</td>\n",
       "      <td>0.706383</td>\n",
       "      <td>0.028410</td>\n",
       "      <td>-0.874941</td>\n",
       "      <td>0.874941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.548161</td>\n",
       "      <td>0.956062</td>\n",
       "      <td>1.083351</td>\n",
       "      <td>1.173333</td>\n",
       "      <td>1.229861</td>\n",
       "      <td>1.001000</td>\n",
       "      <td>0.671017</td>\n",
       "      <td>1.408265</td>\n",
       "      <td>0.374338</td>\n",
       "      <td>-0.108646</td>\n",
       "      <td>-0.590364</td>\n",
       "      <td>-0.905603</td>\n",
       "      <td>-2.116255</td>\n",
       "      <td>-0.818667</td>\n",
       "      <td>0.662574</td>\n",
       "      <td>-0.874941</td>\n",
       "      <td>0.874941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12735</th>\n",
       "      <td>-0.900676</td>\n",
       "      <td>-1.032657</td>\n",
       "      <td>-1.214995</td>\n",
       "      <td>-0.988725</td>\n",
       "      <td>-0.962662</td>\n",
       "      <td>-0.989061</td>\n",
       "      <td>-1.223836</td>\n",
       "      <td>-0.933111</td>\n",
       "      <td>-1.019413</td>\n",
       "      <td>-0.970959</td>\n",
       "      <td>-0.590364</td>\n",
       "      <td>-0.618785</td>\n",
       "      <td>0.004105</td>\n",
       "      <td>0.706383</td>\n",
       "      <td>-0.605754</td>\n",
       "      <td>1.142935</td>\n",
       "      <td>-1.142935</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12736</th>\n",
       "      <td>-0.900676</td>\n",
       "      <td>-1.032657</td>\n",
       "      <td>-1.214995</td>\n",
       "      <td>-0.988725</td>\n",
       "      <td>-0.962662</td>\n",
       "      <td>-0.989061</td>\n",
       "      <td>0.722230</td>\n",
       "      <td>0.070336</td>\n",
       "      <td>0.722776</td>\n",
       "      <td>0.214722</td>\n",
       "      <td>-0.590364</td>\n",
       "      <td>-2.124578</td>\n",
       "      <td>0.004105</td>\n",
       "      <td>-0.818667</td>\n",
       "      <td>0.662574</td>\n",
       "      <td>-0.874941</td>\n",
       "      <td>0.874941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12737</th>\n",
       "      <td>-0.900676</td>\n",
       "      <td>-1.032657</td>\n",
       "      <td>-1.214995</td>\n",
       "      <td>-0.988725</td>\n",
       "      <td>-0.962662</td>\n",
       "      <td>-0.989061</td>\n",
       "      <td>0.261319</td>\n",
       "      <td>-0.264146</td>\n",
       "      <td>1.419652</td>\n",
       "      <td>1.400404</td>\n",
       "      <td>-0.590364</td>\n",
       "      <td>1.360258</td>\n",
       "      <td>-1.409468</td>\n",
       "      <td>-0.818667</td>\n",
       "      <td>0.662574</td>\n",
       "      <td>1.142935</td>\n",
       "      <td>-1.142935</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12738</th>\n",
       "      <td>-0.900676</td>\n",
       "      <td>-1.032657</td>\n",
       "      <td>-1.214995</td>\n",
       "      <td>-0.988725</td>\n",
       "      <td>-0.962662</td>\n",
       "      <td>-0.989061</td>\n",
       "      <td>0.722230</td>\n",
       "      <td>0.070336</td>\n",
       "      <td>-0.670975</td>\n",
       "      <td>-0.707474</td>\n",
       "      <td>-0.590364</td>\n",
       "      <td>-0.833898</td>\n",
       "      <td>0.004105</td>\n",
       "      <td>-0.818667</td>\n",
       "      <td>0.741845</td>\n",
       "      <td>1.142935</td>\n",
       "      <td>-1.142935</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12739</th>\n",
       "      <td>-0.900676</td>\n",
       "      <td>-1.032657</td>\n",
       "      <td>-1.214995</td>\n",
       "      <td>-0.988725</td>\n",
       "      <td>-0.962662</td>\n",
       "      <td>-0.989061</td>\n",
       "      <td>0.414956</td>\n",
       "      <td>-0.933111</td>\n",
       "      <td>0.722776</td>\n",
       "      <td>1.005176</td>\n",
       "      <td>-0.590364</td>\n",
       "      <td>-0.862580</td>\n",
       "      <td>0.004105</td>\n",
       "      <td>2.231434</td>\n",
       "      <td>0.583304</td>\n",
       "      <td>-0.874941</td>\n",
       "      <td>0.874941</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>12740 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Ventricles  Hippocampus  WholeBrain  Fusiform  Entorhinal   MidTemp  \\\n",
       "0        2.194140     0.507305    1.033304  0.772405    0.023230  0.879963   \n",
       "1        2.339773     0.544074    0.974064  0.646788    0.373329  0.732851   \n",
       "2        2.395342     0.460403    0.965268  0.671435   -0.084112  0.769173   \n",
       "3        2.663160     0.455191    0.951179  0.605106   -0.315860  0.674616   \n",
       "4        0.548161     0.956062    1.083351  1.173333    1.229861  1.001000   \n",
       "...           ...          ...         ...       ...         ...       ...   \n",
       "12735   -0.900676    -1.032657   -1.214995 -0.988725   -0.962662 -0.989061   \n",
       "12736   -0.900676    -1.032657   -1.214995 -0.988725   -0.962662 -0.989061   \n",
       "12737   -0.900676    -1.032657   -1.214995 -0.988725   -0.962662 -0.989061   \n",
       "12738   -0.900676    -1.032657   -1.214995 -0.988725   -0.962662 -0.989061   \n",
       "12739   -0.900676    -1.032657   -1.214995 -0.988725   -0.962662 -0.989061   \n",
       "\n",
       "       RAVLT_immediate  RAVLT_learning  RAVLT_forgetting  \\\n",
       "0            -0.097167       -0.598629          0.374338   \n",
       "1            -0.250803       -0.264146          1.071214   \n",
       "2             0.363744       -0.264146          1.419652   \n",
       "3            -0.045954       -0.598629          0.722776   \n",
       "4             0.671017        1.408265          0.374338   \n",
       "...                ...             ...               ...   \n",
       "12735        -1.223836       -0.933111         -1.019413   \n",
       "12736         0.722230        0.070336          0.722776   \n",
       "12737         0.261319       -0.264146          1.419652   \n",
       "12738         0.722230        0.070336         -0.670975   \n",
       "12739         0.414956       -0.933111          0.722776   \n",
       "\n",
       "       RAVLT_perc_forgetting       FDG       AGE  PTEDUCAT     APOE4  \\\n",
       "0                   1.400404  1.436013  1.073441  0.710892  0.706383   \n",
       "1                   1.400404  1.385501  1.073441  0.710892  0.706383   \n",
       "2                   1.400404  1.460256  1.073441  0.710892  0.706383   \n",
       "3                   1.400404  1.339263  1.073441  0.710892  0.706383   \n",
       "4                  -0.108646 -0.590364 -0.905603 -2.116255 -0.818667   \n",
       "...                      ...       ...       ...       ...       ...   \n",
       "12735              -0.970959 -0.590364 -0.618785  0.004105  0.706383   \n",
       "12736               0.214722 -0.590364 -2.124578  0.004105 -0.818667   \n",
       "12737               1.400404 -0.590364  1.360258 -1.409468 -0.818667   \n",
       "12738              -0.707474 -0.590364 -0.833898  0.004105 -0.818667   \n",
       "12739               1.005176 -0.590364 -0.862580  0.004105  2.231434   \n",
       "\n",
       "           MMSE  PTGENDER_Female  PTGENDER_Male  \n",
       "0      0.107681        -0.874941       0.874941  \n",
       "1      0.424763        -0.874941       0.874941  \n",
       "2     -0.130131        -0.874941       0.874941  \n",
       "3      0.028410        -0.874941       0.874941  \n",
       "4      0.662574        -0.874941       0.874941  \n",
       "...         ...              ...            ...  \n",
       "12735 -0.605754         1.142935      -1.142935  \n",
       "12736  0.662574        -0.874941       0.874941  \n",
       "12737  0.662574         1.142935      -1.142935  \n",
       "12738  0.741845         1.142935      -1.142935  \n",
       "12739  0.583304        -0.874941       0.874941  \n",
       "\n",
       "[12740 rows x 17 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import scipy.stats as stats\n",
    "stats.zscore(dataframe_subset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "400ec28f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 12740 entries, 0 to 12739\n",
      "Data columns (total 17 columns):\n",
      " #   Column                 Non-Null Count  Dtype  \n",
      "---  ------                 --------------  -----  \n",
      " 0   Ventricles             12740 non-null  float64\n",
      " 1   Hippocampus            12740 non-null  float64\n",
      " 2   WholeBrain             12740 non-null  float64\n",
      " 3   Fusiform               12740 non-null  float64\n",
      " 4   Entorhinal             12740 non-null  float64\n",
      " 5   MidTemp                12740 non-null  float64\n",
      " 6   RAVLT_immediate        12740 non-null  float64\n",
      " 7   RAVLT_learning         12740 non-null  float64\n",
      " 8   RAVLT_forgetting       12740 non-null  float64\n",
      " 9   RAVLT_perc_forgetting  12740 non-null  float64\n",
      " 10  FDG                    12740 non-null  float64\n",
      " 11  AGE                    12740 non-null  float64\n",
      " 12  PTEDUCAT               12740 non-null  int64  \n",
      " 13  APOE4                  12740 non-null  float64\n",
      " 14  MMSE                   12740 non-null  float64\n",
      " 15  PTGENDER_Female        12740 non-null  uint8  \n",
      " 16  PTGENDER_Male          12740 non-null  uint8  \n",
      "dtypes: float64(14), int64(1), uint8(2)\n",
      "memory usage: 1.5 MB\n"
     ]
    }
   ],
   "source": [
    "dataframe_subset.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7c2b2c30",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=dataframe_subset.drop(['MMSE'],axis=1).values\n",
    "y=dataframe_subset['MMSE'].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "85394639",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[8.45990e+04 5.31900e+03 1.12983e+06 ... 1.00000e+00 0.00000e+00\n",
      "  1.00000e+00]\n",
      " [8.85800e+04 5.44600e+03 1.10006e+06 ... 1.00000e+00 0.00000e+00\n",
      "  1.00000e+00]\n",
      " [9.00990e+04 5.15700e+03 1.09564e+06 ... 1.00000e+00 0.00000e+00\n",
      "  1.00000e+00]\n",
      " ...\n",
      " [0.00000e+00 0.00000e+00 0.00000e+00 ... 0.00000e+00 1.00000e+00\n",
      "  0.00000e+00]\n",
      " [0.00000e+00 0.00000e+00 0.00000e+00 ... 0.00000e+00 1.00000e+00\n",
      "  0.00000e+00]\n",
      " [0.00000e+00 0.00000e+00 0.00000e+00 ... 2.00000e+00 0.00000e+00\n",
      "  1.00000e+00]]\n"
     ]
    }
   ],
   "source": [
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e3f5ef5c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[20. 24. 17. ... 27. 28. 26.]\n"
     ]
    }
   ],
   "source": [
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8c045034",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Master\\AppData\\Roaming\\Python\\Python39\\site-packages\\sklearn\\svm\\_base.py:1225: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(12740, 14)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.svm import LinearSVC\n",
    "#from sklearn.datasets import load_iris\n",
    "from sklearn.feature_selection import SelectFromModel\n",
    "lsvc = LinearSVC(C=0.01, penalty=\"l1\", dual=False).fit(x, y)\n",
    "model = SelectFromModel(lsvc, prefit=True)\n",
    "X_new = model.transform(x)\n",
    "X_new.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9e477298",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ventricles</th>\n",
       "      <th>Hippocampus</th>\n",
       "      <th>WholeBrain</th>\n",
       "      <th>Fusiform</th>\n",
       "      <th>Entorhinal</th>\n",
       "      <th>MidTemp</th>\n",
       "      <th>RAVLT_immediate</th>\n",
       "      <th>RAVLT_learning</th>\n",
       "      <th>RAVLT_forgetting</th>\n",
       "      <th>RAVLT_perc_forgetting</th>\n",
       "      <th>FDG</th>\n",
       "      <th>AGE</th>\n",
       "      <th>PTEDUCAT</th>\n",
       "      <th>APOE4</th>\n",
       "      <th>MMSE</th>\n",
       "      <th>PTGENDER_Female</th>\n",
       "      <th>PTGENDER_Male</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>84599.0</td>\n",
       "      <td>5319.0</td>\n",
       "      <td>1129830.0</td>\n",
       "      <td>15506.0</td>\n",
       "      <td>1791.0</td>\n",
       "      <td>18422.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>100.0000</td>\n",
       "      <td>1.09079</td>\n",
       "      <td>81.3</td>\n",
       "      <td>18</td>\n",
       "      <td>1.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>88580.0</td>\n",
       "      <td>5446.0</td>\n",
       "      <td>1100060.0</td>\n",
       "      <td>14400.0</td>\n",
       "      <td>2427.0</td>\n",
       "      <td>16972.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>100.0000</td>\n",
       "      <td>1.06360</td>\n",
       "      <td>81.3</td>\n",
       "      <td>18</td>\n",
       "      <td>1.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>90099.0</td>\n",
       "      <td>5157.0</td>\n",
       "      <td>1095640.0</td>\n",
       "      <td>14617.0</td>\n",
       "      <td>1596.0</td>\n",
       "      <td>17330.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>100.0000</td>\n",
       "      <td>1.10384</td>\n",
       "      <td>81.3</td>\n",
       "      <td>18</td>\n",
       "      <td>1.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>97420.0</td>\n",
       "      <td>5139.0</td>\n",
       "      <td>1088560.0</td>\n",
       "      <td>14033.0</td>\n",
       "      <td>1175.0</td>\n",
       "      <td>16398.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>100.0000</td>\n",
       "      <td>1.03871</td>\n",
       "      <td>81.3</td>\n",
       "      <td>18</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>39605.0</td>\n",
       "      <td>6869.0</td>\n",
       "      <td>1154980.0</td>\n",
       "      <td>19036.0</td>\n",
       "      <td>3983.0</td>\n",
       "      <td>19615.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>36.3636</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>67.5</td>\n",
       "      <td>10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Ventricles  Hippocampus  WholeBrain  Fusiform  Entorhinal  MidTemp  \\\n",
       "0     84599.0       5319.0   1129830.0   15506.0      1791.0  18422.0   \n",
       "1     88580.0       5446.0   1100060.0   14400.0      2427.0  16972.0   \n",
       "2     90099.0       5157.0   1095640.0   14617.0      1596.0  17330.0   \n",
       "3     97420.0       5139.0   1088560.0   14033.0      1175.0  16398.0   \n",
       "4     39605.0       6869.0   1154980.0   19036.0      3983.0  19615.0   \n",
       "\n",
       "   RAVLT_immediate  RAVLT_learning  RAVLT_forgetting  RAVLT_perc_forgetting  \\\n",
       "0             22.0             1.0               4.0               100.0000   \n",
       "1             19.0             2.0               6.0               100.0000   \n",
       "2             31.0             2.0               7.0               100.0000   \n",
       "3             23.0             1.0               5.0               100.0000   \n",
       "4             37.0             7.0               4.0                36.3636   \n",
       "\n",
       "       FDG   AGE  PTEDUCAT  APOE4  MMSE  PTGENDER_Female  PTGENDER_Male  \n",
       "0  1.09079  81.3        18    1.0  20.0                0              1  \n",
       "1  1.06360  81.3        18    1.0  24.0                0              1  \n",
       "2  1.10384  81.3        18    1.0  17.0                0              1  \n",
       "3  1.03871  81.3        18    1.0  19.0                0              1  \n",
       "4  0.00000  67.5        10    0.0  27.0                0              1  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe_subset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c19eeb22",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 12740 entries, 0 to 12739\n",
      "Data columns (total 17 columns):\n",
      " #   Column                 Non-Null Count  Dtype  \n",
      "---  ------                 --------------  -----  \n",
      " 0   Ventricles             12740 non-null  float64\n",
      " 1   Hippocampus            12740 non-null  float64\n",
      " 2   WholeBrain             12740 non-null  float64\n",
      " 3   Fusiform               12740 non-null  float64\n",
      " 4   Entorhinal             12740 non-null  float64\n",
      " 5   MidTemp                12740 non-null  float64\n",
      " 6   RAVLT_immediate        12740 non-null  float64\n",
      " 7   RAVLT_learning         12740 non-null  float64\n",
      " 8   RAVLT_forgetting       12740 non-null  float64\n",
      " 9   RAVLT_perc_forgetting  12740 non-null  float64\n",
      " 10  FDG                    12740 non-null  float64\n",
      " 11  AGE                    12740 non-null  float64\n",
      " 12  PTEDUCAT               12740 non-null  int64  \n",
      " 13  APOE4                  12740 non-null  float64\n",
      " 14  MMSE                   12740 non-null  float64\n",
      " 15  PTGENDER_Female        12740 non-null  uint8  \n",
      " 16  PTGENDER_Male          12740 non-null  uint8  \n",
      "dtypes: float64(14), int64(1), uint8(2)\n",
      "memory usage: 1.5 MB\n"
     ]
    }
   ],
   "source": [
    "dataframe_subset.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "eea0e4cb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[8.45990e+04 5.31900e+03 1.12983e+06 ... 1.00000e+00 0.00000e+00\n",
      "  1.00000e+00]\n",
      " [8.85800e+04 5.44600e+03 1.10006e+06 ... 1.00000e+00 0.00000e+00\n",
      "  1.00000e+00]\n",
      " [9.00990e+04 5.15700e+03 1.09564e+06 ... 1.00000e+00 0.00000e+00\n",
      "  1.00000e+00]\n",
      " ...\n",
      " [0.00000e+00 0.00000e+00 0.00000e+00 ... 0.00000e+00 1.00000e+00\n",
      "  0.00000e+00]\n",
      " [0.00000e+00 0.00000e+00 0.00000e+00 ... 0.00000e+00 1.00000e+00\n",
      "  0.00000e+00]\n",
      " [0.00000e+00 0.00000e+00 0.00000e+00 ... 2.00000e+00 0.00000e+00\n",
      "  1.00000e+00]]\n"
     ]
    }
   ],
   "source": [
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4e70a8dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "752af454",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((8918, 16), (3822, 16), (3822,))"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import Lasso, LogisticRegression\n",
    "from sklearn.feature_selection import SelectFromModel\n",
    "x_train.shape, x_test.shape,y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "620ab14f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           0       1          2        3       4        5     6     7     8   \\\n",
      "0     69010.0     0.0   890715.0      0.0     0.0      0.0  31.0   4.0   8.0   \n",
      "1         0.0     0.0        0.0      0.0     0.0      0.0  47.0  11.0   7.0   \n",
      "2         0.0     0.0        0.0      0.0     0.0      0.0   0.0   0.0   0.0   \n",
      "3     45375.0  5700.0   916581.0  13352.0  2066.0  13737.0  18.0   1.0   4.0   \n",
      "4     39706.0     0.0   961157.0  17948.0  3403.0  20420.0   0.0   0.0   0.0   \n",
      "...       ...     ...        ...      ...     ...      ...   ...   ...   ...   \n",
      "8913  65243.0  5622.0   906268.0  16242.0  3098.0  15768.0  17.0   1.0   2.0   \n",
      "8914  38128.0  7980.0  1138230.0  23297.0  3998.0  23653.0  29.0   3.0   5.0   \n",
      "8915  56118.0  6148.0   956610.0      0.0     0.0      0.0  42.0   3.0  11.0   \n",
      "8916      0.0  5646.0        0.0      0.0     0.0      0.0  50.0  10.0   4.0   \n",
      "8917  19090.0  6545.0   923836.0  12051.0  3588.0  14891.0  34.0   4.0   3.0   \n",
      "\n",
      "            9         10    11    12   13   14   15  \n",
      "0      88.8889  0.000000  71.9  16.0  1.0  1.0  0.0  \n",
      "1      50.0000  0.000000  72.0  20.0  1.0  0.0  1.0  \n",
      "2       0.0000  0.000000  73.6  12.0  1.0  1.0  0.0  \n",
      "3     100.0000  0.784956  73.1  12.0  1.0  1.0  0.0  \n",
      "4       0.0000  0.000000  84.9  12.0  0.0  0.0  1.0  \n",
      "...        ...       ...   ...   ...  ...  ...  ...  \n",
      "8913   50.0000  1.017220  87.3  15.0  1.0  0.0  1.0  \n",
      "8914   62.5000  0.000000  74.3  18.0  0.0  0.0  1.0  \n",
      "8915  100.0000  1.206630  76.8  12.0  0.0  1.0  0.0  \n",
      "8916   26.6667  1.583120  78.9  16.0  0.0  1.0  0.0  \n",
      "8917   37.5000  0.000000  70.8  15.0  1.0  1.0  0.0  \n",
      "\n",
      "[8918 rows x 16 columns]\n"
     ]
    }
   ],
   "source": [
    "sel_ = SelectFromModel(LogisticRegression(C=1, penalty='l1', solver='liblinear'))\n",
    "sel_.fit(x_train, np.ravel(y_train,order='C'))\n",
    "sel_.get_support()\n",
    "x_train = pd.DataFrame(x_train)\n",
    "print(x_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "577ce09d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total features: 16\n",
      "selected features: 16\n",
      "features with coefficients shrank to zero: 61\n"
     ]
    }
   ],
   "source": [
    "selected_feat = x_train.columns[(sel_.get_support())]\n",
    "print('total features: {}'.format((x_train.shape[1])))\n",
    "print('selected features: {}'.format(len(selected_feat)))\n",
    "print('features with coefficients shrank to zero: {}'.format(\n",
    "np.sum(sel_.estimator_.coef_ == 0)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "16580dd9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeRegressor(random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor(random_state=0)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeRegressor(random_state=0)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# import the regressor\n",
    "from sklearn import tree\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "\n",
    "# create a regressor object\n",
    "regressor = DecisionTreeRegressor(random_state = 0)\n",
    "\n",
    "# fit the regressor with X and Y data\n",
    "regressor.fit(x_train, y_train)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "1cf3c5d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "with open('model5.pkl','wb') as file:\n",
    "        pickle.dump(regressor, file)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "5c6f5a00",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Predicted price:  20\n",
      "\n",
      "Predicted price:  24\n",
      "\n",
      "Predicted price:  17\n",
      "\n"
     ]
    }
   ],
   "source": [
    "\n",
    "y_pred2 = regressor.predict([[84599.0,5319.0,1129830.0,15506.0,1791.0,18422.0,22.0,1.0,4.0,100.0000,1.09079,81.3,18,1.0,0,1]])\n",
    "y_pred3 = regressor.predict([[88580.0,5446.0,1100060.0,14400.0,2427.0,16972.0,19.0,2.0,6.0,100.0000,1.06360,81.3,18,1.0,0,1]])\n",
    "y_pred4 = regressor.predict([[90099.0,5157.0,1095640.0,14617.0,1596.0,17330.0,31.0,2.0,7.0,100.0000,1.10384,81.3,18,1.0,0,1]])\n",
    "print(\"Predicted price: % d\\n\"% y_pred2)\n",
    "print(\"Predicted price: % d\\n\"% y_pred3)\n",
    "print(\"Predicted price: % d\\n\"% y_pred4)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
